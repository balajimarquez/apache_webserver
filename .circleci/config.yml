version: 2.1
jobs:
  build:
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t nginx-image -f Dockerfile.nginx .
            docker build -t apache-image -f Dockerfile.apache .
      - run:
          name: Tag Docker image
          command: |
            docker tag nginx-image:latest $ACR_REGISTRY.azurecr.io/nginx-image:latest
            docker tag apache-image:latest $ACR_REGISTRY.azurecr.io/apache-image:latest
      - run:
          name: Push Docker image
          command: |
            docker login $ACR_REGISTRY.azurecr.io -u $ACR_USERNAME -p $ACR_PASSWORD
            docker push $ACR_REGISTRY.azurecr.io/nginx-image:latest
            docker push $ACR_REGISTRY.azurecr.io/apache-image:latest
  test:          
    docker:
      - image: circleci/node:14  
    steps:
      - checkout
      - run: 
          name: Install Azure CLI
          command: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            sudo apt-get update
            sudo apt-get install azure-cli
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.10/2023-01-30/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
            az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME
      - run:
          name: Deploy into AKS
          command: |  
            kubectl apply -f nginx_deploy.yaml

workflows:
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
 
